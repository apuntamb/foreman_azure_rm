<% arch ||= nil
   os ||= nil
   images = possible_images(compute_resource, arch, os)
   resource_groups = compute_resource.resource_groups
%>

<script>
    function azure_rm_region_callback() {
        azure_rm_get_size_from_region();
        azure_rm_subnets_from_region();
    }

    function azure_rm_get_size_from_region() {
        var region = $('#azure_rm_region').val();
        var size_spinner = $('#azure_rm_size_spinner');
        var sizes = $('#azure_rm_size');
        var imageId = $('#azure_rm_image_id').val();
        if (typeof tfm == 'undefined') {  // earlier than 1.13
            foreman.tools.showSpinner();
        } else {
            tfm.tools.showSpinner();
        }
        size_spinner.removeClass('hide');
        $.ajax({
            data: {"region_string": region, "image_id": imageId},
            type: 'get',
            url: '/azure_rm/sizes',
            complete: function () {
                reloadOnAjaxComplete('#azure_rm_size');
                size_spinner.addClass('hide');
                if (typeof tfm == 'undefined') {  // earlier than 1.13
                    foreman.tools.hideSpinner();
                } else {
                    tfm.tools.hideSpinner();
                }
            },
            error: function (request, status, error) {
                console.log(request);
                console.log(error);
            },
            success: function (request_sizes) {
                sizes.empty();
                $.each(request_sizes, function () {
                    sizes.append($("<option />").val(this).text(this));
                });
            }
        });
    }

    function azure_rm_subnets_from_region() {
        var imageId = $('#azure_rm_image_id').val();
        var subnets = $('#azure_rm_subnet');
        var region = $('#azure_rm_region').val();
        if (typeof tfm == 'undefined') {  // earlier than 1.13
            foreman.tools.showSpinner();
        } else {
            tfm.tools.showSpinner();
        }
        $.ajax({
            data: {"image_id": imageId, "region": region},
            type: 'get',
            url: '/azure_rm/subnets',
            complete: function () {
                reloadOnAjaxComplete('#azure_rm_subnet');
                if (typeof tfm == 'undefined') {  // earlier than 1.13
                    foreman.tools.hideSpinner();
                } else {
                    tfm.tools.hideSpinner();
                }
            },
            error: function (request, status, error) {
                console.log(status);
                console.log(request);
                console.log(error);
            },
            success: function (request_subnets) {
                subnets.empty();
                $.each(request_subnets, function () {
                    //noinspection JSAnnotator
                    subnets.append($("<option />").val(this.id).text(`${this.virtual_network_name} - ${this.name} (${this.address_prefix})`));
                });
            }
        });
    }
</script>

<%= selectable_f f, :location, compute_resource.regions,
                 { :include_blank => _('Please select an Azure region') },
                 {
                     :label       => _('Azure Region'),
                     :required    => true,
                     :id          => 'azure_rm_region',
                     :label_size  => "col-md-2",
                     :onchange    => 'azure_rm_region_callback();',
                     :help_inline => spinner_button_f(f, _('Reload Images, Sizes, vNets'),
                                                      'azure_rm_region_callback();',
                                                      {
                                                          :id            => 'load_subnets_btn',
                                                          :spinner_id    => 'load_subnets_indicator',
                                                          :class         => 'btn-success',
                                                          :spinner_class => 'spinner-inverse'
                                                      })
                 }
%>

<%= selectable_f f, :resource_group, resource_groups,
                 { :include_blank => true },
                 {
                     :disabled => resource_groups.empty?,
                     :label    => _('Resource Group'),
                     :required => true,
                     :id       => 'azure_rm_rg'
                 }
%>

<%= selectable_f f, :vm_size, [],
                 { :include_blank => _('Please first select an Azure region') },
                 {
                     :label    => _('VM Size'),
                     :required => true,
                     :id       => 'azure_rm_size'
                 }
%>

<%= selectable_f f, :platform, %w(Linux Windows),
                 {},
                 {
                     :label    => _('Platform'),
                     :required => true
                 }
%>

<%= text_f f, :username,
           {
               :label    => _('Username'),
               :required => true
           }
%>
<%= text_f f, :password,
           {
               :label    => _('Password'),
               :required => true
           }
%>

<%= textarea_f f, :ssh_key_data,
               {
                   :label => _('SSH Key')
               }
%>

<%= number_f f, :os_disk_size,
             {
                 :class    => "col-md-2",
                 :label    => _('OS Disk Size (GB)'), :label_size => "col-md-2",
                 :required => true
             }
%>

<%= checkbox_f f, :premium_os_disk,
               {
                   :label => _('Premium OS Disk'), :label_size => "col-md-2"
               },
               'true',
               'false'
%>

<%= selectable_f f, :os_disk_caching, %w(None ReadOnly ReadWrite),
                 {},
                 {
                     :label    => _('OS Disk Caching'),
                     :required => true,
                     :class    => "col-md-2"
                 }
%>

<%= text_f f, :puppet_master,
           {
               :label => _('Puppet Master'),
               :help_inline => _('For the Azure Puppet extension for Windows')
           }
%>

<%= text_f f, :script_command,
           {
               :label => _('Custom Script Command')
           }
%>

<%= text_f f, :script_uris,
           {
               :label => _('Comma seperated file URIs')
           }
%>

<div id="image_selection">
  <%= select_f f, :image_id, images, :uuid, :name,
               { :include_blank => (images.empty? or images.size == 1) ? false : _('Please select an image') },
               {
                   :disabled   => images.empty?,
                   :label      => _('Image'),
                   :required   => true,
                   :label_size => "col-md-2",
                   :id         => 'azure_rm_image_id'
               }
  %>
</div>
